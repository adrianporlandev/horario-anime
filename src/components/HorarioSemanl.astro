---
import { horario } from '../data/horario';

// Organizar el horario por día
const horarioPorDia = horario.reduce((acc, evento) => {
  if (!acc[evento.dia]) {
    acc[evento.dia] = [];
  }
  acc[evento.dia].push(evento);
  return acc;
}, {} as Record<string, typeof horario>);

// Orden de los días de la semana
const ordenDias = ["Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Domingo"];

// Filtrar y ordenar los días que tienen eventos
const diasConEventos = ordenDias.filter(dia => horarioPorDia[dia]);

// Función para determinar el color basado en el tipo
function getColor(tipo: string) {
  return tipo === "Anime" ? "bg-blue-800 text-blue-100" : "bg-green-800 text-green-100";
}
---

<div class="max-w-6xl mx-auto p-4">
  <h2 class="text-3xl font-bold text-center mb-8 text-gray-100">Horario Semanal de Anime y Manga</h2>
  <div class="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-6">
    {diasConEventos.map((dia) => (
      <div class="bg-gray-800 shadow-lg rounded-lg overflow-hidden border border-gray-700">
        <div class="bg-gray-700 text-gray-100 px-4 py-2 font-semibold">{dia}</div>
        <ul class="divide-y divide-gray-700">
          {horarioPorDia[dia].sort((a, b) => a.hora.localeCompare(b.hora)).map((evento) => (
            <li class="px-4 py-3 flex justify-between items-center hover:bg-gray-750 transition-colors duration-200">
              <div>
                <p class="font-medium text-gray-100">{evento.nombre}</p>
                <p class="text-sm text-gray-400">{evento.hora}</p>
              </div>
              <span class={`px-2 py-1 rounded-full text-xs font-medium ${getColor(evento.tipo)}`}>
                {evento.tipo}
              </span>
            </li>
          ))}
        </ul>
      </div>
    ))}
  </div>
</div>